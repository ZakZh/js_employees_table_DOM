{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAmMQ,EAEA,EAKA,EA1MF,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAQ,EAAK,aAAa,CAAC,SAC3B,EAAW,IAsVjB,WACE,IAAI,CAAC,cAAc,CAAG,SAAU,CAAK,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAM,EAAG,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAM,UAC/B,UAAjB,OAAO,IAIP,CAAA,EAAM,MAAM,CAAG,CAAA,IAAO,CAAA,EAAM,MAAM,CAAG,CAAA,CAK3C,EAEA,IAAI,CAAC,aAAa,CAAG,SAAU,CAAK,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAM,CAAC,IAAU,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAM,UACtC,UAAjB,OAAO,IAIP,CAAA,EAAQ,CAAA,IAAO,CAAA,EAAQ,CAAA,CAK7B,EAEA,IAAI,CAAC,SAAS,CAAG,SAAU,CAAK,CAAE,CAAQ,UACnC,EAAS,IAAI,CAAC,SAAC,CAApB,EAA+B,OAAA,IAAW,CACxC,EAIJ,CACF,EArXM,EAAe,CAAC,OAAQ,WAAY,SAAU,MAAO,SAAS,CAC9D,EAAc,CAClB,QACA,YACA,SACA,WACA,YACA,gB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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar body = document.querySelector(\"body\");\nvar table = body.querySelector(\"table\");\nvar validate = new Validator();\nvar tableColumns = [\n    \"name\",\n    \"position\",\n    \"office\",\n    \"age\",\n    \"salary\"\n];\nvar officesList = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar editableCell = {\n    cellInitialValue: \"\",\n    cell: null\n};\nvar tableDataSortingInfo = {\n    column: \"\",\n    sortingType: \"\"\n};\nvar employeeForm = body.appendChild(createNewEmployeeForm(tableColumns, officesList));\nemployeeForm.addEventListener(\"click\", handleFormSubmit);\ntable.addEventListener(\"click\", handleTableClick);\ntable.addEventListener(\"dblclick\", handleTableDoubleClick);\ntable.addEventListener(\"blur\", handleTableBlur, true);\ntable.addEventListener(\"keydown\", handleCellKeyDown);\nfunction handleFormSubmit(e) {\n    e.preventDefault();\n    if (e.target.matches(\"button\")) {\n        var validated = validateFormData(e.target, tableColumns, officesList);\n        if (validated.status === false) createNotificationElement(\"Error!\", validated.validationErrors, \"error\");\n        else {\n            createNotificationElement(\"Success!\", [\n                \"Data added to the table!\"\n            ], \"success\");\n            table.tBodies[0].append(createNewRow(validated.data, tableColumns));\n            e.target.form.reset();\n        }\n    }\n}\nfunction handleTableClick(e) {\n    if (e.target.matches(\"th\")) {\n        var sortingResult = tableSorting(e.target, table, tableDataSortingInfo);\n        if (sortingResult && sortingResult.sortedRows) {\n            tableDataSortingInfo.column = sortingResult.column;\n            tableDataSortingInfo.sortingType = sortingResult.sortingType;\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = sortingResult.sortedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var el = _step.value;\n                    table.tBodies[0].append(el);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }\n    var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n    if (e.target.parentElement.matches(\"tr\")) try {\n        for(var _iterator1 = table.tBodies[0].rows[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n            var row = _step1.value;\n            row.classList.remove(\"active\");\n            if (row === e.target.parentElement) row.classList.add(\"active\");\n        }\n    } catch (err) {\n        _didIteratorError1 = true;\n        _iteratorError1 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                _iterator1.return();\n            }\n        } finally{\n            if (_didIteratorError1) {\n                throw _iteratorError1;\n            }\n        }\n    }\n}\nfunction handleTableDoubleClick(e) {\n    if (e.target.matches(\"td\")) {\n        editableCell.cellInitialValue = e.target.innerText;\n        editableCell.cell = e.target;\n        var cellInput = createCellInput(editableCell.cellInitialValue);\n        e.target.replaceChildren(cellInput);\n        cellInput.focus();\n    }\n}\nfunction handleTableBlur(e) {\n    if (e.target.classList.contains(\"cell-input\")) saveChanges(e.target);\n}\nfunction handleCellKeyDown(e) {\n    if (e.key === \"Enter\" && e.target.classList.contains(\"cell-input\")) {\n        e.preventDefault();\n        saveChanges(e.target);\n    }\n}\nfunction tableSorting(targetColumn, tab, sortingInfo) {\n    var tabBodyRows = Array.from(tab.tBodies[0].rows);\n    var sortedColumn = sortingInfo.column;\n    var typeOfSorting = sortingInfo.sortingType;\n    var columnIndex = targetColumn.cellIndex;\n    if (targetColumn.innerText === sortedColumn && typeOfSorting === \"ASC\") typeOfSorting = \"DESC\";\n    else typeOfSorting = \"ASC\";\n    tabBodyRows.sort(function(a, b) {\n        var elFirst = a.children[columnIndex].innerText;\n        var elSecond = b.children[columnIndex].innerText;\n        var elFirstNumber = parseFloat(elFirst.replace(/[$,]/g, \"\"));\n        var elSecondNumber = parseFloat(elSecond.replace(/[$,]/g, \"\"));\n        if (!isNaN(elFirstNumber) && !isNaN(elSecondNumber)) return typeOfSorting === \"ASC\" ? elFirstNumber - elSecondNumber : elSecondNumber - elFirstNumber;\n        return typeOfSorting === \"ASC\" ? elFirst.localeCompare(elSecond) : elSecond.localeCompare(elFirst);\n    });\n    return {\n        column: targetColumn.innerText,\n        sortingType: typeOfSorting,\n        sortedRows: tabBodyRows\n    };\n}\nfunction saveChanges(input) {\n    var cell = input.parentElement;\n    var newValue = input.value.trim();\n    var columnIndex = cell.cellIndex;\n    var columnName = tableColumns[columnIndex];\n    if (columnName === \"name\" && !validate.extremumLength(newValue, 4)) {\n        createNotificationElement(\"Error!\", [\n            \"Incorrect \".concat(columnName, \" value!\")\n        ], \"error\");\n        newValue = editableCell.cellInitialValue;\n    }\n    if (columnName === \"age\") {\n        if (!validate.extremumValue(+newValue, 18, 90) || isNaN(Number(newValue))) {\n            createNotificationElement(\"Error!\", [\n                \"Incorrect \".concat(columnName, \" value!\")\n            ], \"error\");\n            newValue = editableCell.cellInitialValue;\n        }\n    }\n    if (columnName === \"office\" && !validate.oneOfMany(newValue, officesList)) {\n        createNotificationElement(\"Error!\", [\n            \"Incorrect \".concat(columnName, \" value!\")\n        ], \"error\");\n        newValue = editableCell.cellInitialValue;\n    }\n    if (columnName === \"salary\") {\n        newValue = Number(newValue.replace(/[$,]/g, \"\"));\n        if (isNaN(newValue)) {\n            createNotificationElement(\"Error!\", [\n                \"Incorrect \".concat(columnName, \" value!\")\n            ], \"error\");\n            newValue = editableCell.cellInitialValue;\n        } else newValue = \"$\".concat(newValue.toLocaleString(\"en-US\"));\n    }\n    cell.textContent = newValue || editableCell.cellInitialValue;\n    editableCell.cell = null;\n}\nfunction createNewEmployeeForm(inputs, offices) {\n    var _form;\n    var form = document.createElement(\"form\");\n    var submitButton = document.createElement(\"button\");\n    submitButton.type = \"submit\";\n    submitButton.innerText = \"Save to table\";\n    var inputsElements = inputs.map(function(input) {\n        var label = document.createElement(\"label\");\n        var inputElement = input === \"office\" ? document.createElement(\"select\") : document.createElement(\"input\");\n        inputElement.name = input;\n        inputElement.dataset.qa = input;\n        if (input === \"age\" || input === \"salary\") {\n            inputElement.type = \"number\";\n            if (input === \"age\") {\n                inputElement.min = 0;\n                inputElement.max = 150;\n            }\n        } else if (input === \"office\") {\n            var _inputElement;\n            var defaultSelect = document.createElement(\"option\");\n            defaultSelect.innerText = \"(select office)\";\n            defaultSelect.selected = true;\n            var options = offices.map(function(office) {\n                var option = document.createElement(\"option\");\n                option.innerText = office;\n                return option;\n            });\n            (_inputElement = inputElement).append.apply(_inputElement, [\n                defaultSelect\n            ].concat(_to_consumable_array(options)));\n        } else inputElement.type = \"text\";\n        label.innerText = input[0].toUpperCase() + input.slice(1);\n        label.append(inputElement);\n        return label;\n    });\n    form.className = \"new-employee-form\";\n    (_form = form).append.apply(_form, _to_consumable_array(inputsElements).concat([\n        submitButton\n    ]));\n    return form;\n}\nfunction createNewRow(data, columns) {\n    var _row;\n    var row = document.createElement(\"tr\");\n    var tds = columns.map(function(column) {\n        var td = document.createElement(\"td\");\n        td.innerText = data[column];\n        return td;\n    });\n    (_row = row).append.apply(_row, _to_consumable_array(tds));\n    return row;\n}\nfunction createNotificationElement(title, description, type) {\n    var _descriptionElement;\n    var notificationElement = document.createElement(\"div\");\n    var titleElement = document.createElement(\"h2\");\n    var descriptionElement = document.createElement(\"ul\");\n    titleElement.className = \"title\";\n    titleElement.innerText = title;\n    var messages = description.map(function(message) {\n        var li = document.createElement(\"li\");\n        li.innerText = message;\n        return li;\n    });\n    (_descriptionElement = descriptionElement).append.apply(_descriptionElement, _to_consumable_array(messages));\n    notificationElement.classList.add(\"notification\", type);\n    notificationElement.dataset.qa = \"notification\";\n    notificationElement.append(titleElement, descriptionElement);\n    body.append(notificationElement);\n    window.setTimeout(function() {\n        notificationElement.remove();\n    }, 3000);\n}\nfunction createCellInput(initialValue) {\n    var input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.className = \"cell-input\";\n    input.value = initialValue;\n    return input;\n}\nfunction validateFormData(target, columns, offices) {\n    var data = {};\n    var validationErrors = [];\n    columns.forEach(function(columnName) {\n        _to_consumable_array(target.form).forEach(function(field) {\n            if (field.dataset.qa === columnName) data[columnName] = field.value.trim();\n        });\n    });\n    if (!validate.extremumLength(data.name, 4)) validationErrors.push(\"Too short name!\");\n    if (!validate.extremumValue(+data.age, 18, 90)) validationErrors.push(\"Age must be between 18 and 90!\");\n    if (!validate.oneOfMany(data.office, offices)) validationErrors.push(\"Enter office\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = Object.entries(data)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n            if (!value || value.length === 0) validationErrors.push(\"Enter \".concat(key));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    data.salary = \"$\" + Number(data.salary).toLocaleString(\"en-US\");\n    return {\n        status: validationErrors.length === 0,\n        data: data,\n        validationErrors: validationErrors\n    };\n}\nfunction Validator() {\n    this.extremumLength = function(value) {\n        var min = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, max = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;\n        if (typeof value !== \"string\") return false;\n        if (value.length < min || value.length > max) return false;\n        return true;\n    };\n    this.extremumValue = function(value) {\n        var min = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -Infinity, max = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Infinity;\n        if (typeof value !== \"number\") return false;\n        if (value < min || value > max) return false;\n        return true;\n    };\n    this.oneOfMany = function(value, ofValues) {\n        if (!ofValues.some(function(office) {\n            return office === value;\n        })) return false;\n        return true;\n    };\n}\n\n//# sourceMappingURL=index.a0eb0ac3.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst table = body.querySelector('table');\nconst validate = new Validator();\nconst tableColumns = ['name', 'position', 'office', 'age', 'salary'];\nconst officesList = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\nconst editableCell = {\n  cellInitialValue: '',\n  cell: null,\n};\nconst tableDataSortingInfo = {\n  column: '',\n  sortingType: '',\n};\n\nconst employeeForm = body.appendChild(\n  createNewEmployeeForm(tableColumns, officesList),\n);\n\nemployeeForm.addEventListener('click', handleFormSubmit);\ntable.addEventListener('click', handleTableClick);\ntable.addEventListener('dblclick', handleTableDoubleClick);\ntable.addEventListener('blur', handleTableBlur, true);\ntable.addEventListener('keydown', handleCellKeyDown);\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  if (e.target.matches('button')) {\n    const validated = validateFormData(e.target, tableColumns, officesList);\n\n    if (validated.status === false) {\n      createNotificationElement('Error!', validated.validationErrors, 'error');\n    } else {\n      createNotificationElement(\n        'Success!',\n        ['Data added to the table!'],\n        'success',\n      );\n\n      table.tBodies[0].append(createNewRow(validated.data, tableColumns));\n      e.target.form.reset();\n    }\n  }\n}\n\nfunction handleTableClick(e) {\n  if (e.target.matches('th')) {\n    const sortingResult = tableSorting(e.target, table, tableDataSortingInfo);\n\n    if (sortingResult && sortingResult.sortedRows) {\n      tableDataSortingInfo.column = sortingResult.column;\n      tableDataSortingInfo.sortingType = sortingResult.sortingType;\n\n      for (const el of sortingResult.sortedRows) {\n        table.tBodies[0].append(el);\n      }\n    }\n  }\n\n  if (e.target.parentElement.matches('tr')) {\n    for (const row of table.tBodies[0].rows) {\n      row.classList.remove('active');\n\n      if (row === e.target.parentElement) {\n        row.classList.add('active');\n      }\n    }\n  }\n}\n\nfunction handleTableDoubleClick(e) {\n  if (e.target.matches('td')) {\n    editableCell.cellInitialValue = e.target.innerText;\n    editableCell.cell = e.target;\n\n    const cellInput = createCellInput(editableCell.cellInitialValue);\n\n    e.target.replaceChildren(cellInput);\n    cellInput.focus();\n  }\n}\n\nfunction handleTableBlur(e) {\n  if (e.target.classList.contains('cell-input')) {\n    saveChanges(e.target);\n  }\n}\n\nfunction handleCellKeyDown(e) {\n  if (e.key === 'Enter' && e.target.classList.contains('cell-input')) {\n    e.preventDefault();\n    saveChanges(e.target);\n  }\n}\n\nfunction tableSorting(targetColumn, tab, sortingInfo) {\n  const tabBodyRows = Array.from(tab.tBodies[0].rows);\n  const sortedColumn = sortingInfo.column;\n  let typeOfSorting = sortingInfo.sortingType;\n\n  const columnIndex = targetColumn.cellIndex;\n\n  if (targetColumn.innerText === sortedColumn && typeOfSorting === 'ASC') {\n    typeOfSorting = 'DESC';\n  } else {\n    typeOfSorting = 'ASC';\n  }\n\n  tabBodyRows.sort((a, b) => {\n    const elFirst = a.children[columnIndex].innerText;\n    const elSecond = b.children[columnIndex].innerText;\n\n    const elFirstNumber = parseFloat(elFirst.replace(/[$,]/g, ''));\n    const elSecondNumber = parseFloat(elSecond.replace(/[$,]/g, ''));\n\n    if (!isNaN(elFirstNumber) && !isNaN(elSecondNumber)) {\n      return typeOfSorting === 'ASC'\n        ? elFirstNumber - elSecondNumber\n        : elSecondNumber - elFirstNumber;\n    }\n\n    return typeOfSorting === 'ASC'\n      ? elFirst.localeCompare(elSecond)\n      : elSecond.localeCompare(elFirst);\n  });\n\n  return {\n    column: targetColumn.innerText,\n    sortingType: typeOfSorting,\n    sortedRows: tabBodyRows,\n  };\n}\n\nfunction saveChanges(input) {\n  const cell = input.parentElement;\n  let newValue = input.value.trim();\n  const columnIndex = cell.cellIndex;\n  const columnName = tableColumns[columnIndex];\n\n  if (columnName === 'name' && !validate.extremumLength(newValue, 4)) {\n    createNotificationElement(\n      'Error!',\n      [`Incorrect ${columnName} value!`],\n      'error',\n    );\n    newValue = editableCell.cellInitialValue;\n  }\n\n  if (columnName === 'age') {\n    if (!validate.extremumValue(+newValue, 18, 90) || isNaN(Number(newValue))) {\n      createNotificationElement(\n        'Error!',\n        [`Incorrect ${columnName} value!`],\n        'error',\n      );\n      newValue = editableCell.cellInitialValue;\n    }\n  }\n\n  if (columnName === 'office' && !validate.oneOfMany(newValue, officesList)) {\n    createNotificationElement(\n      'Error!',\n      [`Incorrect ${columnName} value!`],\n      'error',\n    );\n    newValue = editableCell.cellInitialValue;\n  }\n\n  if (columnName === 'salary') {\n    newValue = Number(newValue.replace(/[$,]/g, ''));\n\n    if (isNaN(newValue)) {\n      createNotificationElement(\n        'Error!',\n        [`Incorrect ${columnName} value!`],\n        'error',\n      );\n      newValue = editableCell.cellInitialValue;\n    } else {\n      newValue = `$${newValue.toLocaleString('en-US')}`;\n    }\n  }\n\n  cell.textContent = newValue || editableCell.cellInitialValue;\n  editableCell.cell = null;\n}\n\nfunction createNewEmployeeForm(inputs, offices) {\n  const form = document.createElement('form');\n\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n  submitButton.innerText = 'Save to table';\n\n  const inputsElements = inputs.map((input) => {\n    const label = document.createElement('label');\n    const inputElement =\n      input === 'office'\n        ? document.createElement('select')\n        : document.createElement('input');\n\n    inputElement.name = input;\n    inputElement.dataset.qa = input;\n\n    if (input === 'age' || input === 'salary') {\n      inputElement.type = 'number';\n\n      if (input === 'age') {\n        inputElement.min = 0;\n        inputElement.max = 150;\n      }\n    } else if (input === 'office') {\n      const defaultSelect = document.createElement('option');\n\n      defaultSelect.innerText = '(select office)';\n      defaultSelect.selected = true;\n\n      const options = offices.map((office) => {\n        const option = document.createElement('option');\n\n        option.innerText = office;\n\n        return option;\n      });\n\n      inputElement.append(defaultSelect, ...options);\n    } else {\n      inputElement.type = 'text';\n    }\n\n    label.innerText = input[0].toUpperCase() + input.slice(1);\n    label.append(inputElement);\n\n    return label;\n  });\n\n  form.className = 'new-employee-form';\n  form.append(...inputsElements, submitButton);\n\n  return form;\n}\n\nfunction createNewRow(data, columns) {\n  const row = document.createElement('tr');\n\n  const tds = columns.map((column) => {\n    const td = document.createElement('td');\n\n    td.innerText = data[column];\n\n    return td;\n  });\n\n  row.append(...tds);\n\n  return row;\n}\n\nfunction createNotificationElement(title, description, type) {\n  const notificationElement = document.createElement('div');\n  const titleElement = document.createElement('h2');\n  const descriptionElement = document.createElement('ul');\n\n  titleElement.className = 'title';\n  titleElement.innerText = title;\n\n  const messages = description.map((message) => {\n    const li = document.createElement('li');\n\n    li.innerText = message;\n\n    return li;\n  });\n\n  descriptionElement.append(...messages);\n\n  notificationElement.classList.add('notification', type);\n  notificationElement.dataset.qa = 'notification';\n  notificationElement.append(titleElement, descriptionElement);\n\n  body.append(notificationElement);\n\n  window.setTimeout(() => {\n    notificationElement.remove();\n  }, 3000);\n}\n\nfunction createCellInput(initialValue) {\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.className = 'cell-input';\n  input.value = initialValue;\n\n  return input;\n}\n\nfunction validateFormData(target, columns, offices) {\n  const data = {};\n  const validationErrors = [];\n\n  columns.forEach((columnName) => {\n    [...target.form].forEach((field) => {\n      if (field.dataset.qa === columnName) {\n        data[columnName] = field.value.trim();\n      }\n    });\n  });\n\n  if (!validate.extremumLength(data.name, 4)) {\n    validationErrors.push('Too short name!');\n  }\n\n  if (!validate.extremumValue(+data.age, 18, 90)) {\n    validationErrors.push('Age must be between 18 and 90!');\n  }\n\n  if (!validate.oneOfMany(data.office, offices)) {\n    validationErrors.push('Enter office');\n  }\n\n  for (const [key, value] of Object.entries(data)) {\n    if (!value || value.length === 0) {\n      validationErrors.push(`Enter ${key}`);\n    }\n  }\n\n  data.salary = '$' + Number(data.salary).toLocaleString('en-US');\n\n  return {\n    status: validationErrors.length === 0,\n    data,\n    validationErrors,\n  };\n}\n\nfunction Validator() {\n  this.extremumLength = function (value, min = 0, max = Infinity) {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    if (value.length < min || value.length > max) {\n      return false;\n    }\n\n    return true;\n  };\n\n  this.extremumValue = function (value, min = -Infinity, max = Infinity) {\n    if (typeof value !== 'number') {\n      return false;\n    }\n\n    if (value < min || value > max) {\n      return false;\n    }\n\n    return true;\n  };\n\n  this.oneOfMany = function (value, ofValues) {\n    if (!ofValues.some((office) => office === value)) {\n      return false;\n    }\n\n    return true;\n  };\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","_non_iterable_spread","TypeError","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","form","submitButton","inputsElements","body","document","querySelector","table","validate","extremumLength","value","min","arguments","max","Infinity","extremumValue","oneOfMany","ofValues","some","office","tableColumns","officesList","editableCell","cellInitialValue","cell","tableDataSortingInfo","column","sortingType","saveChanges","input","parentElement","newValue","trim","columnName","cellIndex","createNotificationElement","concat","isNaN","Number","replace","toLocaleString","textContent","title","description","type","notificationElement","createElement","titleElement","descriptionElement","className","innerText","messages","map","message","li","append","apply","classList","add","dataset","qa","window","setTimeout","remove","employeeForm","appendChild","inputs","label","inputElement","defaultSelect","selected","options","offices","option","toUpperCase","addEventListener","e","preventDefault","target","matches","data","row","tds","validated","validateFormData","columns","validationErrors","forEach","field","push","age","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","next","done","_step_value","_array_with_holes","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","err","_non_iterable_rest","key","return","salary","status","tBodies","td","reset","sortingResult","targetColumn","tabBodyRows","tab","rows","sortedColumn","sortingInfo","typeOfSorting","columnIndex","sort","a","b","elFirst","children","elSecond","elFirstNumber","parseFloat","elSecondNumber","localeCompare","sortedRows","el","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","initialValue","cellInput","replaceChildren","focus","contains"],"version":3,"file":"index.a0eb0ac3.js.map"}